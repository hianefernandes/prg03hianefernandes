/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.prg03.atividade06.view;

import java.util.Arrays;
import javax.swing.DefaultListModel;

/**
 *
 * @author hiane
 */
//Declaração da Classe "TelaVetor" que estende "JFrame" para criação de uma interface grafica
public class TelaVetor extends javax.swing.JFrame {
    
    //Cria um array de inteiros chamado vetor com 5 posições 
    int vetor[] = new int[5];
    
    //cria um modelo de lista chamado lista que será usado para armazenar e exibir itens na lista
    DefaultListModel lista = new DefaultListModel();
    
    //Variavel inteira chamado selecionado , inicializada em 0, que será usada para indicar um item selecionado
    int selecionado = 0;

    /**
     * Creates new form TelaVetor
     */
    // Construtor de classe tela vetor 
    public TelaVetor() {
        // Chama o metodo initComponents, responsavel por inicializar os componentes graficos da interface
        initComponents();
        
        // loop que percorre o array vetor
        for(int c = 0; c < vetor.length; c++){
            
            // adiciona cada elemento do array vetor ao modelo de lista 
            lista.addElement(vetor[c]);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtnum = new javax.swing.JSpinner();
        btnadd = new javax.swing.JButton();
        btnremove = new javax.swing.JButton();
        btnordem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblselecionado = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstvetor = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnadd.setText("Adicionar");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnremove.setText("Remover");
        btnremove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnremoveActionPerformed(evt);
            }
        });

        btnordem.setText("Ordenar");
        btnordem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnordemActionPerformed(evt);
            }
        });

        jLabel1.setText("Vetor");

        lblselecionado.setText("[0]");

        lstvetor.setModel(lista);
        lstvetor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstvetorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstvetor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(txtnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnordem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnremove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblselecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(37, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnadd))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnremove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnordem))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblselecionado)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Metod chamado quando o botão "Remover" é pressionado
    private void btnremoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnremoveActionPerformed
        
        // Define o valor do elemento selecionado do vetor como 0
        vetor[selecionado] = 0;
        
        //Remove todos os elementos do modelo de lista "lista"
        lista.removeAllElements();
        
        // Percorre o array vetor
        for(int c = 0; c < vetor.length; c++){
            
            // Adiciona cada elemento do vetor ao modelo de lista "lista"
            lista.addElement(vetor[c]);
        }
    }//GEN-LAST:event_btnremoveActionPerformed

    // Metodo chamado quando o botao "Adicionar" é pressionado
    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        
        // Converte o valor do campo de entrada para inteiro e o armazena no indice selecionado no vetor
        vetor[selecionado] = Integer.parseInt(txtnum.getValue().toString());
        
        // Remove todos os elementos do modelo lista
        lista.removeAllElements();
        
        // percorre o array vetor
        for(int c = 0; c < vetor.length; c++){
            
            // Adiciona cada elemento de vetor ao modelo de lista
            lista.addElement(vetor[c]);
        }
    }//GEN-LAST:event_btnaddActionPerformed
    
    // metodo chamado quando um item da liista é clicado
    private void lstvetorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstvetorMouseClicked
        
        // obtem o indice do item selecionado na lista e o armazena em "selecionado"
        selecionado= lstvetor.getSelectedIndex();
        
        // atualiza o texto do rotulo "lblselecionado" com o indice selecinado
        lblselecionado.setText("[" + selecionado + "]");
    }//GEN-LAST:event_lstvetorMouseClicked

    //metodo chamado quando o botao "ordenar" é pressionado
    private void btnordemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnordemActionPerformed
        
        // ordena os elementos do array vetor em ordem crescente
        Arrays.sort(vetor);
        
        // remove todos os elementos do modelo lista
        lista.removeAllElements();
        
        // percorre o array vetor
        for(int c = 0; c < vetor.length; c++){
            
            //adiciona cada elemento do vetor ao modelo de lista
            lista.addElement(vetor[c]);
        }
    }//GEN-LAST:event_btnordemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVetor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVetor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVetor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVetor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            // Metodo que executa a interface grafica no momento que é chamado
            public void run() {
                
                // cria uma nova instancia de classe vetor e a torna visivel na tela
                new TelaVetor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnordem;
    private javax.swing.JButton btnremove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblselecionado;
    private javax.swing.JList<String> lstvetor;
    private javax.swing.JSpinner txtnum;
    // End of variables declaration//GEN-END:variables
}
